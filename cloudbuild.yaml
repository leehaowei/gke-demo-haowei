# Cloud Build CI/CD Pipeline to build, push, and deploy to GKE using Kustomize

steps:
# Step 1: Build Docker image
- name: 'gcr.io/cloud-builders/docker:20.10.7'
  id: 'build-docker-image'
  args:
    - 'build'
    - '-t'
    - 'us-central1-docker.pkg.dev/${PROJECT_ID}/${_AR_REPO_NAME}/${_IMAGE_NAME}:${COMMIT_SHA}'
    - '.'

# Step 2: Push Docker image to Artifact Registry
- name: 'gcr.io/cloud-builders/docker:20.10.7'
  id: 'push-docker-image'
  args:
    - 'push'
    - 'us-central1-docker.pkg.dev/${PROJECT_ID}/${_AR_REPO_NAME}/${_IMAGE_NAME}:${COMMIT_SHA}'

# Step 3: Get GKE credentials (auth to cluster)
- name: 'gcr.io/cloud-builders/gcloud:latest'
  id: 'get-gke-credentials'
  args:
    - 'container'
    - 'clusters'
    - 'get-credentials'
    - '${_CLUSTER_NAME}'
    - '--zone'
    - '${_CLUSTER_ZONE}'
    - '--project'
    - '${PROJECT_ID}'

# Step 4: Update and apply Kustomize manifests
- name: 'gcr.io/cloud-builders/kubectl'
  id: 'apply-kustomize-manifests'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      set -euo pipefail
      cd overlays/dev
      kustomize edit set image ${_IMAGE_NAME}=us-central1-docker.pkg.dev/${PROJECT_ID}/${_AR_REPO_NAME}/${_IMAGE_NAME}:${COMMIT_SHA}
      kubectl apply -k .
      echo "Deployment complete."

# Cloud Build Options
options:
  pool:
    name: 'projects/${PROJECT_ID}/locations/${_REGION}/workerPools/gke-deploy-private-pool'
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_MEDIUM'
  diskSizeGb: 100

# Substitution variables
substitutions:
  _AR_REPO_NAME: gke-nginx-demo           # Artifact Registry repository name
  _IMAGE_NAME: gke-nginx-demo             # Docker image name (and kustomize image name)
  _CLUSTER_NAME: demo                     # GKE cluster name
  _CLUSTER_ZONE: us-central1-a            # GKE cluster zone
  _REGION: us-central1                    # Cloud Build region for the private pool
