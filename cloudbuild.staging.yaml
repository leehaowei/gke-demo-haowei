steps:
  # Step 1: Build Docker image
  - name: 'gcr.io/cloud-builders/docker:latest'
    id: 'build-docker-image'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/${PROJECT_ID}/${_AR_REPO_NAME}/${_IMAGE_NAME}:${COMMIT_SHA}'
      - '.'

  # Step 2: Push Docker image
  - name: 'gcr.io/cloud-builders/docker:latest'
    id: 'push-docker-image'
    args:
      - 'push'
      - 'us-central1-docker.pkg.dev/${PROJECT_ID}/${_AR_REPO_NAME}/${_IMAGE_NAME}:${COMMIT_SHA}'

  # Step 3: Authenticate to GKE
  - name: 'gcr.io/cloud-builders/gcloud:latest'
    id: 'get-gke-credentials'
    args:
      - 'container'
      - 'clusters'
      - 'get-credentials'
      - '${_CLUSTER_NAME}'
      - '--zone'
      - '${_CLUSTER_ZONE}'
      - '--project'
      - '${PROJECT_ID}'

  # Step 4: Deploy with Helm using deploy.sh
  - name: 'gcr.io/cloud-builders/kubectl'
    id: 'deploy-with-helm'
    entrypoint: 'bash'
    args:
      - 'scripts/deploy.sh'
      - '${PROJECT_ID}'
      - '${_AR_REPO_NAME}'
      - '${_IMAGE_NAME}'
      - '${COMMIT_SHA}'

options:
  pool:
    name: 'projects/${PROJECT_ID}/locations/${_REGION}/workerPools/gke-deploy-private-pool'
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _AR_REPO_NAME: gke-nginx-demo
  _IMAGE_NAME: gke-nginx-demo
  _CLUSTER_NAME: demo
  _CLUSTER_ZONE: us-central1-a
  _REGION: us-central1
  _ENV: staging